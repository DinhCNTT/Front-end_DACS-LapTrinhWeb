import React, { useEffect, useState } from "react";
import axios from "axios";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css"; // Import CSS c·ªßa react-toastify
import "./EmployeeList.css";
import Sidebar from "./Sidebar"; // ƒê·∫£m b·∫£o import Sidebar
const EmployeeList = () => {
  const [employees, setEmployees] = useState([]);

  // H√†m l·∫•y danh s√°ch nh√¢n vi√™n t·ª´ API
  const fetchEmployees = async () => {
    try {
      const response = await axios.get("http://localhost:5133/api/admin/employees");
      setEmployees(response.data);
    } catch (error) {
      console.error("‚ùå L·ªói khi l·∫•y danh s√°ch nh√¢n vi√™n:", error);
    }
  };
  const handleLogout = () => {
    localStorage.removeItem("token"); // X√≥a token ƒëƒÉng nh·∫≠p
    window.location.href = "/login"; // ƒêi·ªÅu h∆∞·ªõng v·ªÅ trang ƒëƒÉng nh·∫≠p
  };

  // H√†m kh√≥a/m·ªü kh√≥a t√†i kho·∫£n nh√¢n vi√™n
  const toggleLock = async (userId, isLocked) => {
    console.log("üîÑ G·ª≠i request:", `/api/admin/toggle-lock/${userId}`);
    try {
      const response = await axios.post(`http://localhost:5133/api/admin/toggle-lock/${userId}`);
      
      // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
      if (!isLocked) {
        toast.success("üîí Nh√¢n vi√™n ƒë√£ b·ªã kh√≥a!");
      } else {
        toast.success("‚úÖ Nh√¢n vi√™n ƒë√£ ƒë∆∞·ª£c m·ªü kh√≥a!");
      }

      fetchEmployees(); // C·∫≠p nh·∫≠t danh s√°ch nh√¢n vi√™n
    } catch (error) {
      toast.error("‚ùå L·ªói khi thay ƒë·ªïi tr·∫°ng th√°i t√†i kho·∫£n!");
      console.error("‚ùå L·ªói khi thay ƒë·ªïi tr·∫°ng th√°i t√†i kho·∫£n:", error.response?.data || error.message);
    }
  };

  useEffect(() => {
    fetchEmployees();
  }, []);

  return (
    <div className="employee-container mx-auto p-4 flex flex-col items-center">
      {/* Ti√™u ƒë·ªÅ cƒÉn gi·ªØa */}
      <h2 className="text-2xl font-bold employee-title text-center mb-4">
        üìã Qu·∫£n l√Ω Nh√¢n Vi√™n
      </h2>
      {/* Component hi·ªÉn th·ªã th√¥ng b√°o */}
      <ToastContainer autoClose={3000} />
      <Sidebar onLogout={handleLogout} /> {/* ‚úÖ Sidebar c√≥ h√†m ƒëƒÉng xu·∫•t */}
      <table className="min-w-full bg-white border border-gray-300 shadow-md">
        <thead>
          <tr className="bg-gray-200">
            <th className="border p-2">M√£ NV</th>
            <th className="border p-2">H·ªç T√™n</th>
            <th className="border p-2">Email</th>
            <th className="border p-2">S·ªë ƒëi·ªán tho·∫°i</th>
            <th className="border p-2">Ch·ª©c v·ª•</th>
            <th className="border p-2">Tr·∫°ng th√°i</th>
            <th className="border p-2">H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {employees.map((emp, index) => (
            <tr key={index} className="text-center">
              <td className="border p-2">{emp.employeeCode || "N/A"}</td>
              <td className="border p-2">{emp.fullName || "Ch∆∞a c√≥ d·ªØ li·ªáu"}</td>
              <td className="border p-2">{emp.email || "N/A"}</td>
              <td className="border p-2">{emp.phoneNumber || "N/A"}</td>
              <td className="border p-2">{emp.role || "Kh√¥ng r√µ"}</td>
              <td className="border p-2">
                {emp.isLocked ? (
                  <span className="text-red-500 font-bold flex items-center justify-center">
                    üîí B·ªã kh√≥a
                  </span>
                ) : (
                  <span className="text-green-500 font-bold flex items-center justify-center">
                    ‚úÖ Ho·∫°t ƒë·ªông
                  </span>
                )}
              </td>
              <td className="border p-2">
                <button
                  onClick={() => toggleLock(emp.userId, emp.isLocked)}
                  className={`px-3 py-1 text-white rounded transition duration-300 transform hover:scale-105 shadow-md ${
                    emp.isLocked ? "bg-green-500" : "bg-orange-500"
                  }`}
                >
                  {emp.isLocked ? "M·ªü kh√≥a" : "Kh√≥a"}
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default EmployeeList;
